[
  {
    "id": "0",
    "date": "2023-08-15",
    "workDone": [{
      "id": "0",
      "todoItem": "Initialized the project",
      "time": {
        "unit": "MINUTE",
        "amount": 15
      }
    },
    {
      "id": "1",
      "todoItem": "Set up tsconfig, eslint environment",
      "time": {
        "unit": "MINUTE",
        "amount": 55
      }
    },
    {
      "id": "2",
      "todoItem": "Create a basic json with data",
      "time": {
        "unit": "MINUTE",
        "amount": 20
      }
    },
    {
      "id": "3",
      "todoItem": "Add basic layout to the page (table with data from json)",
      "time": {
        "unit": "MINUTE",
        "amount": 90
      }
    }
  ],
    "planForTomorrow": [{
      "id": "0",
      "todoItem": "Add models",
      "time": {
        "unit": "MINUTE",
        "amount": 60
      }
    },
    {
      "id": "1",
      "todoItem": "Add get and post requests",
      "time": {
        "unit": "MINUTE",
        "amount": 60
      }
    },
    {
      "id": "2",
      "todoItem": "Add service layer",
      "time": {
        "unit": "MINUTE",
        "amount": 60
      }
    }
  ],
    "currentProblems": ["When adding eslint (typescript-eslint/prefer-optional-chain) rules, there was a conflict. I solved it by adding the projects property to parserOptions with the path to tsconfig."],
    "studentComment": ["Repeated table tags when creating it."],
    "learnedForToday": ["Local json files can only be fetched if they are in a public folder. If they belong inside src, then imports should be used. It all depends on the paths."],
    "mentorComment": [""],
    "isDayOff": false
  },
  {
    "id": "1",
    "date": "2023-08-16",
    "workDone": [{
      "id": "0",
      "todoItem": "Create a model Deal.ts",
      "time": {
        "unit": "MINUTE",
        "amount": 15
      }
    },
    {
      "id": "1",
      "todoItem": "Create an additional models Work, Plan, Time, Unit",
      "time": {
        "unit": "MINUTE",
        "amount": 45
      }
    },
    {
      "id": "2",
      "todoItem": "Change todoList.json according to the model",
      "time": {
        "unit": "MINUTE",
        "amount": 20
      }
    },
    {
      "id": "3",
      "todoItem": "Fix mistakes in code after changed json file",
      "time": {
        "unit": "MINUTE",
        "amount": 75
      }
    }
  ],
    "planForTomorrow": [{
      "id": "0",
      "todoItem": "Move out base state from table.tsx 'TODO: where it is now?'",
      "time": {
        "unit": "MINUTE",
        "amount": 40
      }
    },
    {
      "id": "1",
      "todoItem": "Fix model mistakes (change public to private methods, add methods to properties)",
      "time": {
        "unit": "MINUTE",
        "amount": 80
      }
    },
    {
      "id": "2",
      "todoItem": "Create services to convert data 'TODO: what data, why do you need to convert it'",
      "time": {
        "unit": "MINUTE",
        "amount": 60
      }
    }
  ],
    "currentProblems": ["Initially, I used a stub array for the basic display of the table, so after changing json, it took a very long time to change the models. And only then I realized that this array can be deleted altogether, and left empty."],
    "studentComment": ["Need to figure out how bundlers work. 'TODO it means nothing for both of us'"],
    "learnedForToday": ["ParserOptions.project property is an option allows to provide a path to your project's tsconfig.json. This setting is required if you want to use rules which require type information. True value indicates to look for the nearest tsconfig.json for each source file, and path - is the path to map tsconfig files relative to parserOptions.tsconfigRootDir, or current working directory if not specified."],
    "mentorComment": [
      "✓ Think about main models, for example use 'Report' instead 'Deal', work -> workDone, plan -> planForTomorrow, problem -> currentProblems, -> comment -> studentComment, new -> learnedForToday",
      "✓ Adjust .module.scss instead of css",
      "✓ Adjust routing (add pages folder)",
      "✓ Add services layer (adjust class to get data, currently it should be async and return your json)",
      "✓ Be more concrete in yor report (example: 'add models' -> 'add models: Report, User... etc.')",
      "✓ Estimate your work by hours (at least 30 minutes), not by minutes",
      "✓ Change date format from YYYY-MM-DD to timestamp or ISO826",
      "✓ Use headless component for table",
      "✓ Let's try to use vite instead of webpack",
      "✓ Learn why do you need bundlers (webpack, vite) and learn how to fetch data not only from public folder",
      "Lets start to use firebase instead of backend, learn what the benefits"
    ],
    "isDayOff": false
  },
  {
    "id": "2",
    "date": "2023-08-17",
    "workDone": [{
      "id": "0",
      "todoItem": "Add scss dependency and change files .css to .module.scss",
      "time": {
        "unit": "MINUTE",
        "amount": 15
      }
    },
    {
      "id": "1",
      "todoItem": "Add routing in app (it's only one route to main page now)",
      "time": {
        "unit": "MINUTE",
        "amount": 20
      }
    },
    {
      "id": "2",
      "todoItem": "Create models.io (with models and modelsDTO), rename model's name in project (Deal -> Report, Work -> WorkDone, Plan -> PlanForTomorrow) and model's properties name (add property mentorComment, problem -> currentProblems, etc.)",
      "time": {
        "unit": "MINUTE",
        "amount": 40
      }
    },
    {
      "id": "3",
      "todoItem": "Create service layer with getReports methods that return all methods from .json and convert ReportDTO to Report model",
      "time": {
        "unit": "MINUTE",
        "amount": 55
      }
    },
    {
      "id": "4",
      "todoItem": "Fix mistakes in code after changed model",
      "time": {
        "unit": "MINUTE",
        "amount": 40
      }
    }
  ],
    "planForTomorrow": [{
      "id": "0",
      "todoItem": "Use headless component for table instead of custom table",
      "time": {
        "unit": "MINUTE",
        "amount": 30
      }
    },
    {
      "id": "1",
      "todoItem": "Add delete report by id method to service layer",
      "time": {
        "unit": "MINUTE",
        "amount": 90
      }
    },
    {
      "id": "2",
      "todoItem": "Set up Vite instead of webpack",
      "time": {
        "unit": "MINUTE",
        "amount": 60
      }
    }
  ],
    "currentProblems": ["When I use methods from model (getFullTime, getFullPlan, getFullWork) it return undefined."],
    "studentComment": ["Repeat how to set up routes"],
    "learnedForToday": [""],
    "mentorComment": [""],
    "isDayOff": false
  },
  {
    "id": "3",
    "date": "2023-08-18",
    "workDone": [{}],
    "planForTomorrow": [{}],
    "currentProblems": [""],
    "studentComment": [""],
    "learnedForToday": [""],
    "mentorComment": ["Align model with table view (align columns naming with fields naming, I don't see some fields in the table."],
    "isDayOff": true
  },
  {
    "id": "4",
    "date": "2023-08-19",
    "workDone": [{
      "id": "0",
      "todoItem": "Add property isDayOff to .json, Report model, ReportDTO model, models.draw.io",
      "time": {
        "unit": "MINUTE",
        "amount": 15
      }
    },
    {
      "id": "1",
      "todoItem": "Use base empty headless table (@tanstack/react-table) instead of custom table component",
      "time": {
        "unit": "MINUTE",
        "amount": 55
      }
    },
    {
      "id": "2",
      "todoItem": "Fix mistakes for right render arrays of objects and date (use map in 'cell' property)",
      "time": {
        "unit": "MINUTE",
        "amount": 25
      }
    },
    {
      "id": "3",
      "todoItem": "Add styles to table, delete unneeded table components",
      "time": {
        "unit": "MINUTE",
        "amount": 35
      }
    },
    {
      "id": "4",
      "todoItem": "Migration from CRA to Vite (set up vite.config for use absolute paths, eslint, typescript",
      "time": {
        "unit": "MINUTE",
        "amount": 65
      }
    }
  ],
    "planForTomorrow": [{
      "id": "0",
      "todoItem": "use firebase instead of local json",
      "time": {
        "unit": "MINUTE",
        "amount": 90
      }
    },
    {
      "id": "1",
      "todoItem": "Add delete report by id method to service layer",
      "time": {
        "unit": "MINUTE",
        "amount": 90
      }
    }
  ],
    "currentProblems": ["When I use methods from model (getFullTime, getFullPlan, getFullWork) it return undefined.", "Couldn't type accessor (tried string and AccessorFn but it doesn't work) to render function and follow DRY principle."],
    "studentComment": ["I found info that we can fetch data from local.json (that placed inside src folder) by using import, but if I want to use fetch then this file shoule be placed in public folder. I couldn't find info how to set up webpack (vite) for resolve this."],
    "learnedForToday": ["Headless UI is a term for libraries and utilities that provide the logic, state, processing and API for UI elements and interactions, but do not provide markup, styles, or pre-built implementations. (In this project I use @tanstack/react-table so I learn how to create basic tables with it)", "A module bundler helps you keep your code organised by making it easy to import and use other JavaScript files (modules) in your code. It keeps track of which files depend on which other files and ensures they are loaded in the right order. This helps make your code more modular and easier to maintain."],
    "mentorComment": [""],
    "isDayOff": false
  }
]
